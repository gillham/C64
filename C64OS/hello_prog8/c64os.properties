# configuration file for a C64 like Prog8 compilation target

cpu = 6502
program = CBMPRG
encoding = c64os
load_address = $0900
memtop = $b000
bss_highram_start = $0
bss_highram_end = $0
bss_goldenram_start = $0
bss_goldenram_end = $0

# io_regions specifies memory-mapped I/O registers that should be treated differentely.
# it can be zero or more memory address ranges (inclusive) separated by comma
io_regions = 0,1,$d000-$dfff

# zeropage scratch variables. zp_scratch_reg must always be zp_scratch_b1+1 !
zp_scratch_b1 = $5f
zp_scratch_reg = $60
zp_scratch_w1 = $fb
zp_scratch_w2 = $fd

# free zeropage locations for the various zp usage methods
# zero or more zeropage address ranges (inclusive).
zp_fullsafe = $57-$5e
zp_kernalsafe = $57-$5e
zp_basicsafe =

# the start of the 32 bytes used by the R0-R15 virtual registers. Can be in Zeropage or elsewhere.
virtual_registers = $090a

# replace stock startup code
custom_launcher = ; --- C64 OS dispatch vector table ---\n.word  p8_sys_startup.init_system\n.fill  8\n.fill  32

# Where can we find the standard library (syslib.p8). You can still add more paths manually using -srcdirs
library = ./libraries/c64os

# TODO should the 64tass arguments be in here too perhaps? So that the "program" parameter that now selects 1 of a few fixed sets of arguments, can be removed?
# TODO should an emulator command line also be in here perhaps? So that -emu will work too.
